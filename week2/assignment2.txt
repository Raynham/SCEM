1.
1. 
> install.packages("Stat2Data") 
> library(Stat2Data)
> data("Hawks")
> hawksSmall<-drop_na(select (Hawks,Age,Day,Month,Year,CaptureTime,Species,Wing,Weight,Tail))
> dim(hawksSmall)
[1] 897   9

> head(hawksSmall, n=5)


Continuous: Weight, Wing
Categorical: Species, Age
discrete:Month



2. There are too many variables so that it is hard for customers to interpret the insights or relationships

3. 
ggplot(data = hawksSmall, aes(x=Weight))+xlab("Weight (gm)")+geom_histogram(binwidth = 100) +ylab("Count")

Bimodal


4.ggplot(data = hawksSmall, aes(x=Tail))+xlab("Tail (mm)")+geom_density() +ylab("density")

"adjust" argument is for adjusting the smoothness of lines.  Trimodal

ggplot(data =hawksSmall, aes(x=Tail, color = Species)) +geom_density() +theme_bw()+ xlab("Tail (mm)") +ylab("Density")

ggplot(data =hawksSmall, aes(x=Tail, y=Species, fill = Species)) +geom_violin() +theme_bw()+ xlab("Tail (mm)") 

5. ggplot(data =hawksSmall, aes(x=Tail, y=Weight)) +geom_point(size=3, aes( color = Species, shape = Species)) +theme_bw()+ xlab("Tail (mm)") + ylab("Weight (gm)")

Tail is for horizontal position
Weight is for vertical position
Species is for color and shape
points, triangle, square

6.  ggplot(data = hawksSmall, aes(x=Tail, y =Weight))+theme_bw() + geom_point(aes(color=Species))+facet_wrap(~Species, scale = "free")+geom_smooth(method = "lm")
Position, Length, shade, color




2. 
1. 
hSF<- hawksSmall %>%
+ filter(Species == "RT"& Weight>1000) %>%
+ select(Wing,Weight,Tail)
> hSF

dim(hSF)

hSF has 3 variables, 387 examples (observations or cases)


2. 
hSF <- hSF %>% 
arrange(Wing)
head (hSF, n=5)
 
3. 
Species <- unique(hawksSmall$Species)
species_full_names <- c("Red-tailed"," Cooper's","Sharp-shinned")
species_full_names_df <-data.frame(Species,species_full_names)
hawksFullName <- left_join(Hawks,species_full_names_df) %>%
 select(-Species)%>%
 rename(Species = species_full_names)
head(select(hawksFullName,Species,Wing,Weight),n=7)

4. 

hawksWithBMI <- Hawks %>% 
 mutate (bird_BMI = 1000*Weight/Wing^2) %>%
 select (Species, bird_BMI)
hawksWithBMI<-arrange(hawksWithBMI,desc(bird_BMI))
head(hawksWithBMI, n=8)

hawksWithBMI <- filter(hawksWithBMI, bird_BMI<=100)

ggplot(data = hawksWithBMI, aes(x=bird_BMI,y= Species, fill = Species)) + geom_violin() + theme_bw()+xlab("BMI of Birds")+scale_x_continuous(trans = "log2")

5. 

hawksSummary <- hawksFullName %>%
group_by(Species)%>%
summarize(num_rows = n(), mn_wings = mean(Wing, na.rm=1), md_wing = median(Wing,na.rm = 1),t_mn_wing = mean(Wing,na.rm=1, trim = 0.1), tail_wing_ratio = mean(Wing/Tail,na.rm=1))
head(hawksSummary)

hawksSummaryMissing <- hawksFullName %>%
select(Species,Wing,Weight,Culmen, Hallux,Tail,StandardTail,Tarsus,Crop)%>%
group_by(Species)%>%
summarize(across(everything(),~sum(is.na(.x))))%>%

hawksSummaryMissing


3. 

1. Hawks %>%
summarise(across(c("Wing","Weight"),list(mean=~mean(.x,na.rm=1),t_mean=~mean(.x,na.rm=1,trim=0.1),med=~median(.x,na.rm=1))))

2.  Hawks %>%
group_by(Species) %>%
summarise (across(c("Wing","Weight"), list(mean=~mean(.x,na.rm=1),t_mean=~mean(.x,na.rm=1,trim=0.1),med=~median(.x,na.rm=1))))


2. 

sample variance: a^2*Sx^2

standard deviation: abs(a)*Sx


3.
hal <- Hawks$Hallux
hal<- hal[!is.na(hal)]
outlier_val<-100
num_outliers <-10
corrupted_hal<-c(hal,rep(outlier_val,times=num_outliers)
+ )
num_outliers_vect <-seq(0,1000)
means_vect<-c()
for (num_outliers in num_outliers_vect){
corrupted_hal<-c(hal,rep(outlier_val,times=num_outliers))
means_vect<- c(means_vect,mean(corrupted_hal))
}

num_outliers_vect<-seq(0,1000)
median_vect<-c()
for(num_outliers in num_outliers_vect){
corrupted_hal <-c(hal,rep(outlier_val,times=num_outliers))
median_vect<-c(median_vect, median(corrupted_hal))

t_means_vect<-c()
for(num_outliers in num_outliers_vect){
corrupted_hal<c(hal,rep(outlier_val,times=num_outliers))
t_means_vect<- c(t_means_vect,mean(corrupted_hal,na.rm=1,trim=0.1))
}

df_means_medians<- data.frame(num_outliers=num_outliers_vect, mean=means_vect, t_mean= t_means_vect, median=median_vect)
df_means_medians%>%
pivot_longer(!num_outliers, names_to = "Estimator", values_to ="value")%>%
ggplot(aes(x=num_outliers,color=Estimator,linetype=Estimator, y=value)) + geom_line()+xlab("Number of outliners")
